<template>
    <view class="title_vw">机器信息</view>
    <view wx:if="{{isOldMachine}}">
        <view class="line_vw">
            <text>机器编号：</text>
            <input class="nameplate_in" placeholder="请输入机器编号"/>
        </view>
        <view class="line_vw">
            <text>铭牌照片：</text>
            <button class="single_btn" @tap="previewNameplateImage" size="mini" type="primary">点击拍照/选图</button>
        </view>
        <view>
            <image class="nameplate_image" mode="aspectFill" wx:for="{{nameplateImage}}" @tap="changeNameplatePreview" data-src="{{item}}" src="{{item}}"></image>
        </view>
    </view>
    <view wx:else class="mathine_details">
        <view class="line_vw">
            <text>机器编号：</text>
            <text class="nameplate_tx">{{machineDetail.nameplate.empty? '暂无':machineDetail.nameplate}}</text>
        </view>
        <view class="line_vw" >
            <view class="line_half_vw">
                <text>机型：</text>
                <text class="machine_type_tx">{{machineDetail.machineType.empty? '暂无':machineDetail.machineType}}</text>
            </view>
            <view class="line_half_vw">
                <text>针数：</text>
                <text class="needle_num_tx">{{machineDetail.needleNum.empty? '暂无':machineDetail.needleNum}}</text>
            </view>
        </view>
        <view class="line_vw">
            <view class="line_half_vw">
                <text>头数：</text>
                <text class="head_num_tx">{{machineDetail.headNum.empty? '暂无':machineDetail.headNum}}</text>
            </view>
            <view class="line_half_vw">
                <text>头距：</text>
                <text class="head_distance_tx">{{machineDetail.headDistance.empty? '暂无':machineDetail.headDistance}}</text>
            </view>
        </view>
        <view class="line_vw" >
            <view class="line_half_vw">
                <text>x行距：</text>
                <text class="x_distance_tx">{{machineDetail.xDistance.empty? '暂无':machineDetail.xDistance}}</text>
            </view>
            <view class="line_half_vw">
                <text>y行距：</text>
                <text class="y_distance_tx">{{machineDetail.yDistance.empty? '暂无':machineDetail.yDistance}}</text>
            </view>
        </view>
    </view>
    <view class="title_vw">故障内容</view>
    <view class="line_vw">
        文字描述：
        <input class="nameplate_in" placeholder="故障概述" @input="bindTitleInput"/>
    </view>
    <textarea class="pre_machine_error_in" style="height: 3em" placeholder="请输入机器故障详情" auto-height @input="bindContentInput"/>
    <view class="line_vw">
      <view>语音描述：</view>
      <button class="single_btn" size="mini" disabled="{{isRecording}}" loading="{{isRecording}}" type="{{isRecording ? 'warn' : 'primary'}}" @touchstart="touchdown" @touchend="touchup">{{recordBtnVal}}</button>
    </view>
    <button wx:if="{{hasRecorded}}" class="single_big_btn" disabled="{{isPlaying}}" loading="{{isPlaying}}" @tap="playRecord">播放语音</button>
    <view class="line_vw">
        <text>故障照片：</text>
        <button class="single_btn" @tap="previewImage" size="mini" type="primary">点击拍照/选图</button>
    </view>
    <view>
        <image class="machine_error_image" mode="aspectFill" wx:for="{{previewImageArr}}" @tap="changePreview" data-src="{{item}}" src="{{item}}"></image>
    </view>
    <view class="title_vw">联系方式</view>
    <view class="line_vw">
        <text>联系人：</text>
        <input class="nameplate_in" placeholder="请联系人姓名" @input="bindKeyInput"/>
    </view>
    <view class="line_vw">
        <text>电话：</text>
        <text>{{customerPhone}}</text>
    </view>
    <view class="line_vw">
        <text>地址：</text>
        <text>{{customerAddress}}</text>
    </view>
    <button class="single_btn" size="mini" type="primary" @tap="uploadMachineInfo">提交</button>
</template>
<style lang="less">
    .title_vw {
        padding: 15rpx;
        font-size: large;
        font-weight: bold;
        background: #EBEBEB;
        color: #000000;
    }
    .line_vw {
        margin: 20rpx;
        display: flex;
        align-items: center;
        .nameplate_in {
            border-bottom: 1px solid #000000;
        }
    }
    .pre_machine_error_in {
        background: #ffffff;
        padding: 20rpx;
    }
    .single_btn {
        margin-left: 25rpx;
        width: 50%;
    }
    .single_big_btn {
        margin-left: 25rpx;
        margin-right: 25rpx;
    }
    .nameplate_image {
        margin-left: 2.5%;
        width: 30%;
        height: 200rpx;
    }
    .machine_error_image {
        margin-left: 2.5%;
        width: 30%;
        height: 200rpx;
    }
</style>
<script>
    import wepy from 'wepy'
    import MachineDetails from '../components/machine_details'
    import api from '@/api/api'
    import {
        AUTHORIZATION
    } from '@/utils/constant'

    export default class RequestRepair extends wepy.page {
      config = {
        navigationBarTitleText: '机器报修'
      }
      components = {
        machinedetails: MachineDetails
      }
      data = {
        machineDetail: {},
        nameplateImage: ['http://img1.3lian.com/2015/w7/85/d/101.jpg'],
        titleInput: '',
        contentInput: '',
        recordBtnVal: '按住 说话',
        recordTempSrc: '',
        previewImageArr: [],
        isOldMachine: false,
        isRecording: false,
        hasRecorded: false,
        isPlaying: false,
        customerPhone: '暂无',
        customerAddress: '暂无',
        repairRequestInfo: {
          id: '',
          nameplatePicture: '',
          voice: '',
          pictures: '',
          nameplate: '',
          repairTitle: '',
          content: '',
          customer: 0,
          createTime: ''
        }
      };
      methods = {
        async previewNameplateImage() {
          let res = await wepy.chooseImage({count: 1})
          if (res.errMsg === 'chooseImage:ok') {
            let tempFilePaths = res.tempFilePaths
            this.nameplateImage = tempFilePaths
            console.log('srcsssssssssssssssssssssss')
            console.log(tempFilePaths)
            this.$apply()
          }
        },
        changeNameplatePreview(e) {
          var self = this
          wepy.previewImage({
            current: e.currentTarget.dataset.src,
            urls: self.data.nameplateImage
          })
        },
        bindTitleInput(e) {
          console.log(e.detail.value)
          this.repairRequestInfo.repairTitle = e.detail.value
        },
        bindContentInput(e) {
          console.log(e.detail.value)
          this.repairRequestInfo.content = e.detail.value
        },
        async previewImage() {
          let res = await wepy.chooseImage({count: 3})
          if (res.errMsg === 'chooseImage:ok') {
            let tempFilePaths = res.tempFilePaths
            this.previewImageArr = tempFilePaths
            console.log('srcssssssssssssssssssssssss')
            console.log(tempFilePaths)
            this.$apply()
          }
        },
        changePreview(e) {
          var self = this
          wepy.previewImage({
            current: e.currentTarget.dataset.src,
            urls: self.data.previewImageArr
          })
        },
        touchdown() {
          console.log('手指anxia了...')
          this.isRecording = true
          this.recordBtnVal = '松开 结束'
          const recorderManager = wepy.getRecorderManager()
          recorderManager.start({format: 'mp3'})
          recorderManager.onStart(() => {
            console.log('recorder start')
          })
          recorderManager.onPause(() => {
            console.log('recorder pause')
          })
          recorderManager.onStop((res) => {
            console.log('recorder stop ', res)
            this.recordTempSrc = res.tempFilePath
            this.hasRecorded = true
            this.$apply()
          })
        },
        touchup() {
          console.log('手指抬起了...')
          this.isRecording = false
          this.recordBtnVal = '按住 说话'
          wepy.getRecorderManager().stop()
        },
        playRecord() {
          console.log('anniu按下了...', this.recordTempSrc)
          this.isPlaying = true
          const innerAudioContextRecord = wepy.createInnerAudioContext()
          innerAudioContextRecord.autoplay = true
          innerAudioContextRecord.src = this.recordTempSrc
          innerAudioContextRecord.onPlay(() => {
            console.log('开始播放')
          })
          innerAudioContextRecord.onPause(() => {
            console.log('pause了')
            this.isPlaying = false
            this.$apply()
          })
          innerAudioContextRecord.onStop(() => {
            console.log('stop了')
            this.isPlaying = false
            this.$apply()
          })
          innerAudioContextRecord.onError((res) => {
            console.log(res)
            console.log(res.errCode)
            this.isPlaying = false
            this.$apply()
          })
          innerAudioContextRecord.onEnded(() => {
            console.log('bo完了')
            this.isPlaying = false
            this.$apply()
          })
        },
        uploadMachineInfo() {
          let jwtAuthorization = wepy.getStorageSync(AUTHORIZATION)
          this.repairRequestInfo.nameplate = this.machineDetail.nameplate
          let repairRequestInfoJson = JSON.stringify(this.repairRequestInfo)
          this.addRepairRequestInfo(repairRequestInfoJson, jwtAuthorization)
        }
      };
      async addRepairRequestInfo(repairRequestInfoJson, jwtAuthorization) {
        const uploadRepairRequestInfoJson = await api.uploadRepairRequestInfo({
          query: {
            repairRequestInfo: repairRequestInfoJson
          },
          header: {Authorization: jwtAuthorization}
        })
        console.log('上传结果： ', uploadRepairRequestInfoJson)
        if (uploadRepairRequestInfoJson.data.code === 200) {
          this.repairRequestInfo.id = uploadRepairRequestInfoJson.data.data
          repairRequestInfoJson = JSON.stringify(this.repairRequestInfo)
          this.addRepairRequestSrc(repairRequestInfoJson, jwtAuthorization)
        } else {
          wepy.showModal({
            title: '上传出错，请重新上传！',
            content: '网络错误',
            showCancel: false,
            confirmColor: '#007aff',
            success: function() {}
          })
        }
      }
      async addRepairRequestSrc(repairRequestInfoJson, jwtAuthorization) {
        let deleteJson = await api.uploadRepairRequestFiles({
          query: {
            filePath: this.repairRequestInfo.id,
            name: 'key',
            data: {repairRequestInfo: repairRequestInfoJson}
          },
          header: {Authorization: jwtAuthorization}
        })
        if (deleteJson !== 200) {

        } else {
          wepy.showModal({
            title: '上传出错，请重新上传！',
            content: '网络错误',
            showCancel: false,
            confirmColor: '#007aff',
            success: function () {
            }
          })
        }
      }
      events = {};

      async onLoad(options) {
        console.log('request_repair onLoad: ')
        console.log(options)
        if (options.empty) {
          this.isOldMachine = true
        } else {
          this.isOldMachine = false
          this.machineDetail = JSON.parse(options.machineDetail)
          console.log(this.machineDetail)
        }
        let res = await wepy.getSetting()
        if (!res.authSetting['scope.record']) {
          wepy.authorize({scope: 'scope.record'})
        }
      };
    }
</script>
