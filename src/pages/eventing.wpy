<!--积分规则-->
<style lang="less">
  .eventing_list {
    background: #fff;
    padding: 15rpx;
    display: flex;
    margin-top: 15rpx;
    .eventing_img {
      width: 10%;
      height: 70rpx;
    }
    .info {
      padding: 5rpx;
      color: #000000;
      font-size: 26rpx;
      line-height: 35rpx;
      display: flex;
      align-items: center;
      .nameplate_tx {
        font-weight: bold;
        font-size: 36rpx;
      }
    }
    .item {
      background: #fff;
      padding: 15rpx;
      display: flex;
      margin-top: 15rpx;
    }
  }
</style>
<template>
  <view class="eventing_list" wx:for="{{installedList}}" wx:key="item" @tap="installedListClick({{item}})">
    <image class="eventing_img" src="{{logo}}"></image>
    <view class="info">
      <view class="nameplate_tx">{{item.machineNameplate}} </view>
      <view>{{item.machineType}}: 安装待评价 </view>
      <view>{{item.needleNum}}/{{item.headNum}}/{{item.headDistance}}/{{item.xDistance}}/{{item.yDistance}} </view>
    </view>
  </view>
  <view class="eventing_list" wx:for="{{maintainedList}}" wx:key="item" @tap="maintainedListClick({{item}})">
    <image class="eventing_img" src="{{logo}}"></image>
    <view class="info">
      <view class="nameplate_tx">{{item.machineNameplate}} </view>
      <view>{{item.machineType}}: 保养待评价 </view>
      <view>{{item.needleNum}}/{{item.headNum}}/{{item.headDistance}}/{{item.xDistance}}/{{item.yDistance}} </view>
    </view>
  </view>
  <view class="eventing_list" wx:for="{{repairedList}}" wx:key="item" @tap="repairedListClick({{item}})">
    <image class="eventing_img" src="{{logo}}"></image>
    <view class="info">
      <view class="nameplate_tx">{{item.machineNameplate}} </view>
      <view>{{item.machineType}}: 维修待评价 </view>
      <view>{{item.needleNum}}/{{item.headNum}}/{{item.headDistance}}/{{item.xDistance}}/{{item.yDistance}} </view>
    </view>
  </view>
  <view class="eventing_list" wx:for="{{deliveredList}}" wx:key="item" @tap="deliveredListClick({{item}})">
    <image class="eventing_img" src="{{logo}}"></image>
    <view class="info">
      <view class="nameplate_tx">{{item.machineNameplate}} </view>
      <view>{{item.machineType}}: 部件待寄回 </view>
      <view>{{item.needleNum}}/{{item.headNum}}/{{item.headDistance}}/{{item.xDistance}}/{{item.yDistance}} </view>
    </view>
  </view>
</template>
<script>
    import wepy from 'wepy'
    import api from '@/api/api'
    import {
        AUTHORIZATION,
        ACCOUNT
    } from '@/utils/constant'
    export default class Eventing extends wepy.page {
      config = {
        navigationBarTitleText: '事件列表'
      }
      components = {
      }
      data = {
        installedList: [],
        maintainedList: [],
        repairedList: [],
        deliveredList: [],
        logo: '/images/icon_eventing.png'
      }

      events = {
            // 'index-broadcast': (...args) => {
            //   let $event = args[args.length - 1]
            //   console.log(`${this.$name} receive ${$event.name} from ${$event.source.name}`)
            // }
      }

      methods = {
        installedListClick(e) {
          console.log(e)
          let installedRecord = JSON.stringify(e)
          wepy.navigateTo({
            url: '/pages/eventing_install_info?machineDetail=' + installedRecord
          })
        },
        maintainedListClick(e) {
          console.log(e)
          let maintainedRecord = JSON.stringify(e)
          wepy.navigateTo({
            url: '/pages/eventing_maintain_info?machineDetail=' + maintainedRecord
          })
        },
        repairedListClick(e) {
          console.log(e)
          let repairedRecord = JSON.stringify(e)
          wepy.navigateTo({
            url: '/pages/eventing_repair_info?machineDetail=' + repairedRecord
          })
        },
        deliveredListClick(e) {
          console.log(e)
          let deliveredRecord = JSON.stringify(e)
          wepy.navigateTo({
            url: '/pages/eventing_repair_info?machineDetail=' + deliveredRecord
          })
        }

      }

      onLoad() {
        let jwtAuthorization = wepy.getStorageSync(AUTHORIZATION)
        let customerName = wepy.getStorageSync(ACCOUNT)
        this.getInstallRecordList(customerName, 2, jwtAuthorization)
        this.getMaintainRecordList(customerName, 3, jwtAuthorization)
        this.getRepairRecordList(customerName, 3, jwtAuthorization)
        this.getDeliverList(customerName, 2, jwtAuthorization)
      };

      async getInstallRecordList(customerName, installStatus, jwtAuthorization) {
        const installRecordListJson = await api.getInstallRecordList({
          query: {
            installStatus: installStatus,
            installRecordCustomerName: customerName
          },
          header: {Authorization: jwtAuthorization}
        })
        console.log('installRecordListJson: ')
        console.log(installRecordListJson)
        console.log(installRecordListJson.data.data.list)
        console.log(installRecordListJson.data.data.list[1])
        this.installedList = installRecordListJson.data.data.list

        this.$apply()
      };

      async getMaintainRecordList(customerName, maintainStatus, jwtAuthorization) {
        const maintainRecordListJson = await api.getMaintainRecordList({
          query: {
            maintainStatus: maintainStatus,
            customerName: customerName
          },
          header: {Authorization: jwtAuthorization}
        })
        console.log('maintainRecordListJson:')
        console.log(maintainRecordListJson)
        console.log(maintainRecordListJson.data.data.list)
        this.maintainedList = maintainRecordListJson.data.data.list

        this.$apply()
      };

      async getRepairRecordList(customerName, repairStatus, jwtAuthorization) {
        const repairRecordListJson = await api.getRepairRecordList({
          query: {
            repairStatus: repairStatus,
            repairRecordCustomerName: customerName
          },
          header: {Authorization: jwtAuthorization}
        })
        console.log('repairRecordListJson: ')
        console.log(repairRecordListJson)
        console.log(repairRecordListJson.data.data.list)
        this.repairedList = repairRecordListJson.data.data.list

        this.$apply()
      };

      async getDeliverList(customerName, partsStatus, jwtAuthorization) {
        const deliverListJson = await api.getRepairRecordList({
          query: {
            partsStatus: partsStatus,
            repairRecordCustomerName: customerName
          },
          header: {Authorization: jwtAuthorization}
        })
        console.log('repairRecordListJson: ')
        console.log(deliverListJson)
        console.log(deliverListJson.data.data.list)
        this.deliveredList = deliverListJson.data.data.list

        this.$apply()
      }
    }

</script>
