<!--积分规则-->
<style lang="less">
  .eventing_list {
    background: #fff;
    padding: 15rpx;
    display: flex;
    margin-top: 15rpx;
    .eventing_img {
      width: 10%;
      height: 70rpx;
    }
    .info {
      padding: 5rpx;
      color: #000000;
      font-size: 26rpx;
      line-height: 35rpx;
      display: flex;
      align-items: center;
      .nameplate_tx {
        font-weight: bold;
        font-size: 36rpx;
      }
    }
    .item {
      background: #fff;
      padding: 15rpx;
      display: flex;
      margin-top: 15rpx;
    }
  }
</style>
<template>
  <view class="eventing_list" wx:for="{{list}}" wx:key="item" @tap="listItemClick({{item}})">
    <image class="eventing_img" src="{{logo}}"></image>
    <view class="info">
      <view class="nameplate_tx">{{item.machineNameplate}} </view>
      <view>{{item.machineType}}: </view>
      <view>{{item.needleNum}}/{{item.headNum}}/{{item.headDistance}}/{{item.xDistance}}/{{item.yDistance}} </view>
    </view>
  </view>
</template>
<script>
    import wepy from 'wepy'
    import api from '@/api/api'
    import {
        AUTHORIZATION,
        ACCOUNT
    } from '@/utils/constant'
    export default class Eventing extends wepy.page {
      config = {
        navigationBarTitleText: '事件列表'
      }
      components = {
      }
      data = {
        list: [],
        logo: '/images/icon_eventing.png'
      }

      events = {
            // 'index-broadcast': (...args) => {
            //   let $event = args[args.length - 1]
            //   console.log(`${this.$name} receive ${$event.name} from ${$event.source.name}`)
            // }
      }

      methods = {
        listItemClick(e) {
          console.log(e)
          let machines = JSON.stringify(e)
          if (e.status === '2') {
            wepy.navigateTo({
              url: '/pages/eventing_install_info?machineDetail=' + machines
            })
          } else if (e.status === '4') {
            wepy.navigateTo({
              url: '/pages/eventing_maintain_info?machineDetail=' + machines
            })
          } else if (e.status === '5') {
            wepy.navigateTo({
              url: '/pages/eventing_repair_info?machineDetail=' + machines
            })
          } else {
            console.log('status 错误: ' + e.status)
          }
        }

      }

      onLoad() {
        this.list = []
        let jwtAuthorization = wepy.getStorageSync(AUTHORIZATION)
        let customerName = wepy.getStorageSync(ACCOUNT)
        this.getInstallRecordList(customerName, 2, jwtAuthorization)
        // this.getMaintainRecordList(customerName, 3, jwtAuthorization)
        this.getRepairRecordList(customerName, 5, jwtAuthorization)
      };

      async getInstallRecordList(customerName, status, jwtAuthorization) {
        const installRecordListJson = await api.getInstallRecordList({
          query: {
            installStatus: status,
            installRecordCustomerName: customerName
          },
          header: {Authorization: jwtAuthorization}
        })
        console.log('installRecordListJson:')
        console.log(installRecordListJson)
        console.log(installRecordListJson.data.data.list)
        console.log(installRecordListJson.data.data.list[1])
        for (var i = 0; i < installRecordListJson.data.data.list.length; i++) {
          this.list.push(installRecordListJson.data.data.list[i])
        }
        console.log(this.list)

        this.$apply()
      };

      // async getMaintainRecordList(customerName, status, jwtAuthorization) {
      //   const maintainRecordListJson = await api.getMaintainRecordList({
      //     query: {
      //       maintainStatus: status,
      //       customerName: customerName
      //     },
      //     header: {Authorization: jwtAuthorization}
      //   })
      //   console.log('maintainRecordListJson:')
      //   console.log(maintainRecordListJson)
      //   console.log(maintainRecordListJson.data.data.list)
      //   this.list.push(maintainRecordListJson.data.data.list)
      //
      //   this.$apply()
      // };

      async getRepairRecordList(customerName, status, jwtAuthorization) {
        const repairRecordListJson = await api.getRepairRecordList({
          query: {
            repairStatus: status,
            repairRecordCustomerName: customerName
          },
          header: {Authorization: jwtAuthorization}
        })
        console.log('repairRecordListJson: ')
        console.log(repairRecordListJson)
        console.log(repairRecordListJson.data.data.list)
        for (var i = 0; i < repairRecordListJson.data.data.list.length; i++) {
          this.list.push(repairRecordListJson.data.data.list[i])
        }
        console.log(this.list)

        this.$apply()
      }
    }

</script>
