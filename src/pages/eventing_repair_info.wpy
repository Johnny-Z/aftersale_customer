<template>
    <machinedetails :machine.sync="machineDetail"></machinedetails>
    <view class="detail_view_column">
        <view class="title_view" @tap="bindIsShowRepair">
            <view class="title_view_fir_part">
                <image class="detail_icon" src="../images/icon_detail_request.png"></image>
                <text class="title_tx">报修信息</text>
            </view>
            <view class="title_view_sec_part">
                <image wx:if="{{isShowRepair}}" class="arrow_icon" src="../images/icon_arrow_down.png"></image>
                <image wx:else class="arrow_icon" src="../images/icon_arrow_up.png"></image>
            </view>
        </view>
        <view wx:if="{{isShowRepair}}" class="main_view">
            <view class="view_row">
                <text class="label_tx">标题：</text>
                <text class="info_tx">{{machineDetail.repairRequestTitle}}</text>
            </view>
            <view class="view_row">
                <text class="label_tx">描述：</text>
                <text class="info_tx">{{machineDetail.repairRequestContent}}</text>
            </view>
            <view class="view_row">
                <text class="label_tx">语音：</text>
                <button wx:if='{{isSpeaking}}' class="playing_btn" size="mini" loading="true">播放中...</button>
                <button wx:else class="player_btn" size="mini" @tap="voicePlay">点击播放</button>
            </view>
            <view class="view_row">
                <text class="label_tx">照片：</text>
            </view>
            <view class="view_row">
              <image class="photo_image" mode="aspectFill" wx:for="{{preRepairImageArr}}" @tap="changePreRepairPreview" data-src="{{item}}" src="{{item}}"></image>
            </view>
        </view>
    </view>
    <view class="detail_view_column">
        <view class="title_view">
            <view class="title_view_fir_part">
                <image class="detail_icon" src="../images/icon_detail_repair.png"></image>
                <text class="title_tx">维修详情</text>
            </view>
        </view>
        <view class="main_view">
            <view class="view_row">
                <text class="label_tx">故障部位：</text>
                <text class="info_tx">{{issuePositionString}}</text>
            </view>
            <view class="view_row">
                <text class="label_tx">问题描述：</text>
                <text class="info_tx">{{machineDetail.repairActualIssueDescription}}</text>
            </view>
            <view class="view_row">
                <text class="label_tx">处理方法：</text>
                <text class="info_tx">{{machineDetail.repairActualMethod}}</text>
            </view>
            <view class="view_row">
                <text class="label_tx">照片：</text>
            </view>
            <view class="view_row">
              <image class="photo_image" mode="aspectFill" wx:for="{{repairImageArr}}" @tap="changePreview" data-src="{{item}}" src="{{item}}"></image>
            </view>
            <view class="view_row">
                <text class="label_tx">维修人：</text>
                <text class="info_tx">{{machineDetail.repairChargePersonName}}</text>
            </view>
            <view class="view_row">
                <text class="label_tx">电话：</text>
                <text class="info_tx">{{machineDetail.repairChargePersonPhone}}</text>
            </view>
            <view class="view_row">
                <text class="label_tx">维修日期：</text>
                <text class="info_tx">{{machineDetail.repairEndTime}}</text>
            </view>
        </view>
    </view>
    <view class="detail_view_column">
        <view class="title_view">
            <view class="title_view_fir_part">
                <image class="detail_icon" src="../images/icon_detail_suggestion.png"></image>
                <text class="title_tx">客户反馈</text>
            </view>
        </view>
        <view wx:if="{{isExistFeedback}}" class="main_view">
            <view class="view_row">
                <text class="label_tx">评价：</text>
                <text class="info_tx">{{machineDetail.repairFeedbackCustomerMark? mark[machineDetail.repairFeedbackCustomerMark]:'暂无'}}</text>
            </view>
            <view class="view_row">
                <text class="label_tx">意见/建议：</text>
                <text class="info_tx">{{machineDetail.repairFeedbackCustomerSuggestion? machineDetail.repairFeedbackCustomerSuggestion: '暂无'}}</text>
            </view>
        </view>
        <view wx:else class="main_view">
            <view class="view_row">
                <text class="label_tx">评价：</text>
                <picker class="picker_view" @change="bindPickerChange" value="{{index}}" range="{{mark}}">
                    <text class="picker_tx">{{mark[index]}}</text>
                </picker>
            </view>
            <view class="view_row">
                <text class="label_tx">意见/建议：</text>
            </view>
            <textarea @input="bindSuggestionInput" class="textareaInput" placeholder="输入你的意见/建议"></textarea>
        </view>
    </view>
    <button wx:if="{{!isExistFeedback}}" class="single_button" @tap="bindUploadFeedback" >提交</button>
</template>
<style lang="less">
    page {
        margin-bottom: 120rpx;
    }
    .player_btn {
        width: 300rpx;
        background: #007474;
        color: #ffffff;
        border-radius: 100rpx;
        margin-left: 15rpx;
    }
    .playing_btn {
        width: 300rpx;
        opacity: 0.12;
        background: #007474;
        color: #ffffff;
        border-radius: 100rpx;
        margin-left: 15rpx;
    }
</style>
<script>
    /* eslint-disable eqeqeq */

    import wepy from 'wepy'
    import MachineDetails from '../components/machine_details'
    import api from '@/api/api'
    import {
        APIMALL
    } from '@/utils/constant'

    export default class EventingRepairInfo extends wepy.page {
      config = {
        navigationBarTitleText: '维修评价'
      }
      components = {
        machinedetails: MachineDetails
      }
      data = {
        machineDetail: {},
        isSpeaking: false,
        isShowRepair: false,
        preRepairImageArr: [],
        preRepairVoiceSrc: '',
        issuePositionString: '',
        repairImageArr: [],
        isExistFeedback: false,
        repairCustomerFeedback: {
          customerMark: 0,
          customerSuggestion: '',
          customerRepairResult: 'Fixed_OK'
        },
        mark: ['非常满意', '满意', '一般', '差评'],
        index: 0,
        customerSuggestion: ''
      };
      methods = {
        bindIsShowRepair() {
          let isShow = this.isShowRepair
          this.isShowRepair = !isShow
        },
        voicePlay() {
          console.log('eventing_repair_info:手指按下了...')
          this.isSpeaking = true
          const innerAudioContext = wepy.createInnerAudioContext()
          innerAudioContext.autoplay = true
          innerAudioContext.src = this.preRepairVoiceSrc
          innerAudioContext.onPlay(() => {
            console.log('开始播放')
          })
          innerAudioContext.onPause(() => {
            console.log('pause了')
            this.isSpeaking = false
            this.$apply()
          })
          innerAudioContext.onStop(() => {
            console.log('stop了')
            this.isSpeaking = false
            this.$apply()
          })
          innerAudioContext.onError((res) => {
            console.log(res.errMsg)
            console.log(res.errCode)
            this.isSpeaking = false
            this.$apply()
          })
          innerAudioContext.onEnded(() => {
            console.log('bo完了')
            this.isSpeaking = false
            this.$apply()
          })
        },
        changePreRepairPreview(e) {
          var self = this
          wepy.previewImage({
            current: e.currentTarget.dataset.src,
            urls: self.data.preRepairImageArr
          })
        },
        changePreview(e) {
          var self = this
          wepy.previewImage({
            current: e.currentTarget.dataset.src,
            urls: self.data.repairImageArr
          })
        },
        bindPickerChange: function (e) {
          console.log('picker发送选择改变，携带值为:', e.detail.value)
          this.index = e.detail.value
        },
        bindSuggestionInput: function(e) {
          console.log(e.detail.value)
          this.customerSuggestion = e.detail.value
        },
        async bindUploadFeedback() {
          this.repairCustomerFeedback.customerMark = this.index
          this.repairCustomerFeedback.customerSuggestion = this.customerSuggestion
          let repairCustomerFeedbackJson = JSON.stringify(this.repairCustomerFeedback)
          const repairFeedbackJson = await api.uploadRepairFeedback({
            query: {
              repairCustomerFeedback: repairCustomerFeedbackJson,
              repairRecordId: this.machineDetail.id
            }
          })
          console.log('repairFeedbackJson :')
          console.log(repairFeedbackJson)
          console.log(repairFeedbackJson.data.code)
          if (repairFeedbackJson.data.code === 200) {
            wepy.showToast({
              title: '上传成功',
              icon: 'success',
              duration: 2000
            })
            wepy.navigateBack()
          } else {
            wepy.showToast({
              title: '上传失败',
              icon: 'none',
              duration: 2000
            })
          }
        }
      };

      events = {};

      onLoad(options) {
        console.log(options)
        this.machineDetail = JSON.parse(options.machineDetail)
        if (this.machineDetail.repairRequestPictures) {
          let preRepairImageTmp = this.machineDetail.repairRequestPictures.split(',')
          for (var i = 0; i < preRepairImageTmp.length; i++) {
            let temp = preRepairImageTmp[i].split('/aftersale')
            this.preRepairImageArr.push(APIMALL + temp[1])
          }
        }
        if (this.machineDetail.afterResolvePictures) {
          let repairImageTmp = this.machineDetail.afterResolvePictures.split(',')
          for (var j = 0; j < repairImageTmp.length; j++) {
            let temp1 = repairImageTmp[j].split('/aftersale')
            this.repairImageArr.push(APIMALL + temp1[1])
          }
        }
        if (this.machineDetail.repairRequestVoice) {
          let temp2 = this.machineDetail.repairRequestVoice.split('/aftersale')
          this.preRepairVoiceSrc = APIMALL + temp2[1]
          console.log('声音：', this.preRepairVoiceSrc)
        }
        if (this.machineDetail.customerFeedback > 0) {
          this.isExistFeedback = true
        } else {
          this.isExistFeedback = false
        }
        this.getPositionList()
        this.$apply()
      };
        // get issue position list
      async getPositionList() {
        let positionListJson = await api.getIssuePositionList()
        console.log('get position list: ', positionListJson)
        let partMark = positionListJson.data.data.list
        let positionList = this.machineDetail.issuePositionList.split(',')
        for (var i = 0; i < positionList.length; i++) {
          for (var j = 0; j < partMark.length; j++) {
            if (partMark[j].id.toString() == positionList[i]) {
              if (this.issuePositionString) {
                this.issuePositionString = this.issuePositionString + '， ' + partMark[j].name
              } else {
                this.issuePositionString = partMark[j].name
              }
              break
            }
          }
        }
        this.$apply()
      }

        // Other properties
    }
</script>
